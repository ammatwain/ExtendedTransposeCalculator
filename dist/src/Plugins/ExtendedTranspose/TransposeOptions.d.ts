import { ETCDirections } from "./ETC";
import { OpenSheetMusicDisplay } from "opensheetmusicdisplay";
export declare class TransposeOptions {
    private static calculatePrecision;
    private static precision;
    private static transposeByHalftone;
    private static transposeByDiatonic;
    private static transposeByInterval;
    private static transposeByKey;
    private static transposeByKeyRelation;
    static keySignaturesIsTransposed: number;
    static keySignaturesIsFixed: number;
    static keySignaturesIsRemoved: number;
    private transposeType;
    private keySignatures;
    private osmd;
    private transposeDirection;
    private transposeOctave;
    private set Transpose(value);
    constructor(osmd?: OpenSheetMusicDisplay);
    get OSMD(): OpenSheetMusicDisplay;
    set OSMD(osmd: OpenSheetMusicDisplay);
    get MainKey(): number;
    get TransposeType(): number;
    get KeySignatures(): number;
    get KeySignaturesIsTransposed(): boolean;
    set KeySignaturesIsTransposed(value: boolean);
    get KeySignaturesIsFixed(): boolean;
    set KeySignaturesIsFixed(value: boolean);
    get KeySignaturesIsRemoved(): boolean;
    set KeySignaturesIsRemoved(value: boolean);
    get TransposeByHalftone(): boolean;
    set TransposeByHalftone(value: boolean);
    get TransposeByDiatonic(): boolean;
    set TransposeByDiatonic(value: boolean);
    get TransposeByInterval(): boolean;
    set TransposeByInterval(value: boolean);
    get TransposeByKey(): boolean;
    set TransposeByKey(value: boolean);
    get TransposeByKeyRelation(): boolean;
    set TransposeByKeyRelation(value: boolean);
    get TransposeOctave(): number;
    set TransposeOctave(value: number);
    get TransposeDirection(): ETCDirections;
    set TransposeDirection(value: ETCDirections);
    transposeToHalftone(value: number, keySignatures?: number): void;
    transposeToKey(toKey: number, octave?: number, keySignatures?: number): void;
    transposeToKeyRelation(toKey: number, octave?: number, keySignatures?: number): void;
    transposeToInterval(value: number, keySignatures?: number): void;
    transposeToDiatonic(value: number): void;
    removeKeySignatures(): void;
}
